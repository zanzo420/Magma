buildscript {
    ext {
        grgitVersion = '2.3.0'
        aptPluginVersion = '0.19'
        sonarqubeVersion = '2.6.2'
        versionsVersion = '0.20.0'
    }
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath "org.ajoberstar:grgit:${grgitVersion}"
        classpath "net.ltgt.gradle:gradle-apt-plugin:${aptPluginVersion}"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarqubeVersion}"
        classpath "com.github.ben-manes:gradle-versions-plugin:${versionsVersion}"
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.8.1'
}

apply plugin: 'idea'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'
apply plugin: 'com.github.ben-manes.versions'


group = 'club.minnced'
version = '0.9.2'
archivesBaseName = project.name

sourceCompatibility = targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

ext {
    //@formatter:off
    jacocoVersion               = '0.8.2' // the default one, 0.8.1, breaks on java 11+

    orgJsonVersion              = '20180813'
    slf4jVersion                = '1.7.25'

    springVersion               = '5.1.1.RELEASE'
    undertowVersion             = '2.0.14.Final'
    xnioVersion                 = '3.3.8.Final'
    reactorVersion              = '3.2.1.RELEASE'

    spotbugsVersion             = '3.1.8'
    annotationsVersion          = '0.0.1'

    immutablesVersion           = '2.7.1'

    junitVersion                = '5.3.1'
    logbackVersion              = '1.2.3'
    //@formatter:on
}

dependencies {
    //@formatter:off
    implementation      group: 'org.json',              name: 'json',                   version: orgJsonVersion
    implementation      group: 'org.slf4j',             name: 'slf4j-api',              version: slf4jVersion

    // project reactor & reactive websocket client
    implementation      group: 'io.undertow',           name: 'undertow-core',          version: undertowVersion
    api                 group: 'org.springframework',   name: 'spring-webflux',         version: springVersion
    api                 group: 'org.jboss.xnio',        name: 'xnio-nio',               version: xnioVersion
    api                 group: 'io.projectreactor',     name: 'reactor-core',           version: reactorVersion

    // annotations
    compileOnly         group: 'com.github.spotbugs',   name: 'spotbugs-annotations',   version: spotbugsVersion
    compileOnly         group: 'space.npstr',           name: 'annotations',            version: annotationsVersion //todo replace with findBugs

    // immutable objects, to pass values around
    compileOnly         group: 'org.immutables',        name: 'value',                  version: immutablesVersion, classifier: 'annotations'
    annotationProcessor group: 'org.immutables',        name: 'value',                  version: immutablesVersion

    // testing
    testCompile         group: 'org.junit.jupiter',     name: 'junit-jupiter-api',      version: junitVersion
    testRuntime         group: 'ch.qos.logback',        name: 'logback-classic',        version: logbackVersion
    testRuntime         group: 'org.junit.jupiter',     name: 'junit-jupiter-engine',   version: junitVersion
    //@formatter:on
}

compileJava {
    options.encoding = 'UTF-8'
    options.incremental = true
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

build {
    doLast {
        println 'Version: ' + version
    }
}

test {
    useJUnitPlatform()
    jacoco {
        includes['space.npstr.magma.*']
    }
}

jacoco.toolVersion = jacocoVersion

sonarqube {
    properties {
        property "sonar.inclusions", "src/main/java/space/npstr/magma/**/*"
    }
}

publishToMavenLocal.dependsOn jar

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId project.group
            artifactId archivesBaseName
            version project.version

            artifact sourceJar
            artifact javadocJar
        }
    }
}

bintray {
    user = this.properties["bintrayUsername"]
    key = this.properties["bintrayApiKey"]
    publications = ["mavenJava"]
    pkg {
        repo = "maven"
        name = archivesBaseName
        licenses = ["Apache-2.0"]
        vcsUrl = "https://github.com/MinnDevelopment/Magma"
        githubRepo = "MinnDevelopment/Magma"
        publish = true
        version {
            name = project.version
            vcsTag = project.version
            released = new Date()
            gpg.sign = true
        }
    }
}

defaultTasks 'build'

bintrayUpload {
    dependsOn clean
    dependsOn build
    dependsOn javadocJar
    dependsOn sourceJar
    build.mustRunAfter clean
}

idea {
    project {
        configureAnnotationProcessing = true
    }
    module {
        apt {
            addGeneratedSourcesDirs = true
            addAptDependencies = true
            addCompileOnlyDependencies = false
            mainDependenciesScope = 'PROVIDED'
        }
    }
}
